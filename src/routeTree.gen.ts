/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as privateIndexImport } from './routes/(private)/index'
import { Route as publicGridLayoutImport } from './routes/(public)/_grid-layout'
import { Route as privateUnscopedImport } from './routes/(private)/_unscoped'
import { Route as publicGridLayoutServerActivationImport } from './routes/(public)/_grid-layout/server-activation'
import { Route as publicGridLayoutLoginImport } from './routes/(public)/_grid-layout/login'
import { Route as privateUnscopedProjectsImport } from './routes/(private)/_unscoped/projects'
import { Route as privateUnscopedComponentsIndexImport } from './routes/(private)/_unscoped/components/index'
import { Route as privateUnscopedSettingsMembersImport } from './routes/(private)/_unscoped/settings/members'
import { Route as privateUnscopedSettingsGeneralImport } from './routes/(private)/_unscoped/settings/general'
import { Route as privateScopedProjectsProjectidImport } from './routes/(private)/_scoped/projects/$project_id'

// Create Virtual Routes

const publicImport = createFileRoute('/(public)')()
const privateImport = createFileRoute('/(private)')()
const privateScopedProjectsProjectidIndexLazyImport = createFileRoute(
  '/(private)/_scoped/projects/$project_id/',
)()

// Create/Update Routes

const publicRoute = publicImport.update({
  id: '/(public)',
  getParentRoute: () => rootRoute,
} as any)

const privateRoute = privateImport.update({
  id: '/(private)',
  getParentRoute: () => rootRoute,
} as any)

const privateIndexRoute = privateIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => privateRoute,
} as any)

const publicGridLayoutRoute = publicGridLayoutImport.update({
  id: '/_grid-layout',
  getParentRoute: () => publicRoute,
} as any)

const privateUnscopedRoute = privateUnscopedImport
  .update({
    id: '/_unscoped',
    getParentRoute: () => privateRoute,
  } as any)
  .lazy(() => import('./routes/(private)/_unscoped.lazy').then((d) => d.Route))

const publicGridLayoutServerActivationRoute =
  publicGridLayoutServerActivationImport
    .update({
      id: '/server-activation',
      path: '/server-activation',
      getParentRoute: () => publicGridLayoutRoute,
    } as any)
    .lazy(() =>
      import('./routes/(public)/_grid-layout/server-activation.lazy').then(
        (d) => d.Route,
      ),
    )

const publicGridLayoutLoginRoute = publicGridLayoutLoginImport
  .update({
    id: '/login',
    path: '/login',
    getParentRoute: () => publicGridLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(public)/_grid-layout/login.lazy').then((d) => d.Route),
  )

const privateUnscopedProjectsRoute = privateUnscopedProjectsImport
  .update({
    id: '/projects',
    path: '/projects',
    getParentRoute: () => privateUnscopedRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_unscoped/projects.lazy').then((d) => d.Route),
  )

const privateUnscopedComponentsIndexRoute = privateUnscopedComponentsIndexImport
  .update({
    id: '/components/',
    path: '/components/',
    getParentRoute: () => privateUnscopedRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_unscoped/components/index.lazy').then(
      (d) => d.Route,
    ),
  )

const privateUnscopedSettingsMembersRoute = privateUnscopedSettingsMembersImport
  .update({
    id: '/settings/members',
    path: '/settings/members',
    getParentRoute: () => privateUnscopedRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_unscoped/settings/members.lazy').then(
      (d) => d.Route,
    ),
  )

const privateUnscopedSettingsGeneralRoute =
  privateUnscopedSettingsGeneralImport.update({
    id: '/settings/general',
    path: '/settings/general',
    getParentRoute: () => privateUnscopedRoute,
  } as any)

const privateScopedProjectsProjectidRoute = privateScopedProjectsProjectidImport
  .update({
    id: '/_scoped/projects/$project_id',
    path: '/projects/$project_id',
    getParentRoute: () => privateRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_scoped/projects/$project_id.lazy').then(
      (d) => d.Route,
    ),
  )

const privateScopedProjectsProjectidIndexLazyRoute =
  privateScopedProjectsProjectidIndexLazyImport
    .update({
      id: '/',
      path: '/',
      getParentRoute: () => privateScopedProjectsProjectidRoute,
    } as any)
    .lazy(() =>
      import('./routes/(private)/_scoped/projects/$project_id/index.lazy').then(
        (d) => d.Route,
      ),
    )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(private)': {
      id: '/(private)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateImport
      parentRoute: typeof rootRoute
    }
    '/(private)/_unscoped': {
      id: '/(private)/_unscoped'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateUnscopedImport
      parentRoute: typeof privateRoute
    }
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicImport
      parentRoute: typeof rootRoute
    }
    '/(public)/_grid-layout': {
      id: '/(public)/_grid-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicGridLayoutImport
      parentRoute: typeof publicRoute
    }
    '/(private)/': {
      id: '/(private)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateIndexImport
      parentRoute: typeof privateImport
    }
    '/(private)/_unscoped/projects': {
      id: '/(private)/_unscoped/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof privateUnscopedProjectsImport
      parentRoute: typeof privateUnscopedImport
    }
    '/(public)/_grid-layout/login': {
      id: '/(public)/_grid-layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof publicGridLayoutLoginImport
      parentRoute: typeof publicGridLayoutImport
    }
    '/(public)/_grid-layout/server-activation': {
      id: '/(public)/_grid-layout/server-activation'
      path: '/server-activation'
      fullPath: '/server-activation'
      preLoaderRoute: typeof publicGridLayoutServerActivationImport
      parentRoute: typeof publicGridLayoutImport
    }
    '/(private)/_scoped/projects/$project_id': {
      id: '/(private)/_scoped/projects/$project_id'
      path: '/projects/$project_id'
      fullPath: '/projects/$project_id'
      preLoaderRoute: typeof privateScopedProjectsProjectidImport
      parentRoute: typeof privateImport
    }
    '/(private)/_unscoped/settings/general': {
      id: '/(private)/_unscoped/settings/general'
      path: '/settings/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof privateUnscopedSettingsGeneralImport
      parentRoute: typeof privateUnscopedImport
    }
    '/(private)/_unscoped/settings/members': {
      id: '/(private)/_unscoped/settings/members'
      path: '/settings/members'
      fullPath: '/settings/members'
      preLoaderRoute: typeof privateUnscopedSettingsMembersImport
      parentRoute: typeof privateUnscopedImport
    }
    '/(private)/_unscoped/components/': {
      id: '/(private)/_unscoped/components/'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof privateUnscopedComponentsIndexImport
      parentRoute: typeof privateUnscopedImport
    }
    '/(private)/_scoped/projects/$project_id/': {
      id: '/(private)/_scoped/projects/$project_id/'
      path: '/'
      fullPath: '/projects/$project_id/'
      preLoaderRoute: typeof privateScopedProjectsProjectidIndexLazyImport
      parentRoute: typeof privateScopedProjectsProjectidImport
    }
  }
}

// Create and export the route tree

interface privateUnscopedRouteChildren {
  privateUnscopedProjectsRoute: typeof privateUnscopedProjectsRoute
  privateUnscopedSettingsGeneralRoute: typeof privateUnscopedSettingsGeneralRoute
  privateUnscopedSettingsMembersRoute: typeof privateUnscopedSettingsMembersRoute
  privateUnscopedComponentsIndexRoute: typeof privateUnscopedComponentsIndexRoute
}

const privateUnscopedRouteChildren: privateUnscopedRouteChildren = {
  privateUnscopedProjectsRoute: privateUnscopedProjectsRoute,
  privateUnscopedSettingsGeneralRoute: privateUnscopedSettingsGeneralRoute,
  privateUnscopedSettingsMembersRoute: privateUnscopedSettingsMembersRoute,
  privateUnscopedComponentsIndexRoute: privateUnscopedComponentsIndexRoute,
}

const privateUnscopedRouteWithChildren = privateUnscopedRoute._addFileChildren(
  privateUnscopedRouteChildren,
)

interface privateScopedProjectsProjectidRouteChildren {
  privateScopedProjectsProjectidIndexLazyRoute: typeof privateScopedProjectsProjectidIndexLazyRoute
}

const privateScopedProjectsProjectidRouteChildren: privateScopedProjectsProjectidRouteChildren =
  {
    privateScopedProjectsProjectidIndexLazyRoute:
      privateScopedProjectsProjectidIndexLazyRoute,
  }

const privateScopedProjectsProjectidRouteWithChildren =
  privateScopedProjectsProjectidRoute._addFileChildren(
    privateScopedProjectsProjectidRouteChildren,
  )

interface privateRouteChildren {
  privateUnscopedRoute: typeof privateUnscopedRouteWithChildren
  privateIndexRoute: typeof privateIndexRoute
  privateScopedProjectsProjectidRoute: typeof privateScopedProjectsProjectidRouteWithChildren
}

const privateRouteChildren: privateRouteChildren = {
  privateUnscopedRoute: privateUnscopedRouteWithChildren,
  privateIndexRoute: privateIndexRoute,
  privateScopedProjectsProjectidRoute:
    privateScopedProjectsProjectidRouteWithChildren,
}

const privateRouteWithChildren =
  privateRoute._addFileChildren(privateRouteChildren)

interface publicGridLayoutRouteChildren {
  publicGridLayoutLoginRoute: typeof publicGridLayoutLoginRoute
  publicGridLayoutServerActivationRoute: typeof publicGridLayoutServerActivationRoute
}

const publicGridLayoutRouteChildren: publicGridLayoutRouteChildren = {
  publicGridLayoutLoginRoute: publicGridLayoutLoginRoute,
  publicGridLayoutServerActivationRoute: publicGridLayoutServerActivationRoute,
}

const publicGridLayoutRouteWithChildren =
  publicGridLayoutRoute._addFileChildren(publicGridLayoutRouteChildren)

interface publicRouteChildren {
  publicGridLayoutRoute: typeof publicGridLayoutRouteWithChildren
}

const publicRouteChildren: publicRouteChildren = {
  publicGridLayoutRoute: publicGridLayoutRouteWithChildren,
}

const publicRouteWithChildren =
  publicRoute._addFileChildren(publicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof privateIndexRoute
  '/projects': typeof privateUnscopedProjectsRoute
  '/login': typeof publicGridLayoutLoginRoute
  '/server-activation': typeof publicGridLayoutServerActivationRoute
  '/projects/$project_id': typeof privateScopedProjectsProjectidRouteWithChildren
  '/settings/general': typeof privateUnscopedSettingsGeneralRoute
  '/settings/members': typeof privateUnscopedSettingsMembersRoute
  '/components': typeof privateUnscopedComponentsIndexRoute
  '/projects/$project_id/': typeof privateScopedProjectsProjectidIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof privateIndexRoute
  '/projects': typeof privateUnscopedProjectsRoute
  '/login': typeof publicGridLayoutLoginRoute
  '/server-activation': typeof publicGridLayoutServerActivationRoute
  '/settings/general': typeof privateUnscopedSettingsGeneralRoute
  '/settings/members': typeof privateUnscopedSettingsMembersRoute
  '/components': typeof privateUnscopedComponentsIndexRoute
  '/projects/$project_id': typeof privateScopedProjectsProjectidIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(private)': typeof privateRouteWithChildren
  '/(private)/_unscoped': typeof privateUnscopedRouteWithChildren
  '/(public)': typeof publicRouteWithChildren
  '/(public)/_grid-layout': typeof publicGridLayoutRouteWithChildren
  '/(private)/': typeof privateIndexRoute
  '/(private)/_unscoped/projects': typeof privateUnscopedProjectsRoute
  '/(public)/_grid-layout/login': typeof publicGridLayoutLoginRoute
  '/(public)/_grid-layout/server-activation': typeof publicGridLayoutServerActivationRoute
  '/(private)/_scoped/projects/$project_id': typeof privateScopedProjectsProjectidRouteWithChildren
  '/(private)/_unscoped/settings/general': typeof privateUnscopedSettingsGeneralRoute
  '/(private)/_unscoped/settings/members': typeof privateUnscopedSettingsMembersRoute
  '/(private)/_unscoped/components/': typeof privateUnscopedComponentsIndexRoute
  '/(private)/_scoped/projects/$project_id/': typeof privateScopedProjectsProjectidIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/projects'
    | '/login'
    | '/server-activation'
    | '/projects/$project_id'
    | '/settings/general'
    | '/settings/members'
    | '/components'
    | '/projects/$project_id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/projects'
    | '/login'
    | '/server-activation'
    | '/settings/general'
    | '/settings/members'
    | '/components'
    | '/projects/$project_id'
  id:
    | '__root__'
    | '/(private)'
    | '/(private)/_unscoped'
    | '/(public)'
    | '/(public)/_grid-layout'
    | '/(private)/'
    | '/(private)/_unscoped/projects'
    | '/(public)/_grid-layout/login'
    | '/(public)/_grid-layout/server-activation'
    | '/(private)/_scoped/projects/$project_id'
    | '/(private)/_unscoped/settings/general'
    | '/(private)/_unscoped/settings/members'
    | '/(private)/_unscoped/components/'
    | '/(private)/_scoped/projects/$project_id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  privateRoute: typeof privateRouteWithChildren
  publicRoute: typeof publicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  privateRoute: privateRouteWithChildren,
  publicRoute: publicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(private)",
        "/(public)"
      ]
    },
    "/(private)": {
      "filePath": "(private)",
      "children": [
        "/(private)/_unscoped",
        "/(private)/",
        "/(private)/_scoped/projects/$project_id"
      ]
    },
    "/(private)/_unscoped": {
      "filePath": "(private)/_unscoped.tsx",
      "parent": "/(private)",
      "children": [
        "/(private)/_unscoped/projects",
        "/(private)/_unscoped/settings/general",
        "/(private)/_unscoped/settings/members",
        "/(private)/_unscoped/components/"
      ]
    },
    "/(public)": {
      "filePath": "(public)",
      "children": [
        "/(public)/_grid-layout"
      ]
    },
    "/(public)/_grid-layout": {
      "filePath": "(public)/_grid-layout.tsx",
      "parent": "/(public)",
      "children": [
        "/(public)/_grid-layout/login",
        "/(public)/_grid-layout/server-activation"
      ]
    },
    "/(private)/": {
      "filePath": "(private)/index.tsx",
      "parent": "/(private)"
    },
    "/(private)/_unscoped/projects": {
      "filePath": "(private)/_unscoped/projects.tsx",
      "parent": "/(private)/_unscoped"
    },
    "/(public)/_grid-layout/login": {
      "filePath": "(public)/_grid-layout/login.tsx",
      "parent": "/(public)/_grid-layout"
    },
    "/(public)/_grid-layout/server-activation": {
      "filePath": "(public)/_grid-layout/server-activation.tsx",
      "parent": "/(public)/_grid-layout"
    },
    "/(private)/_scoped/projects/$project_id": {
      "filePath": "(private)/_scoped/projects/$project_id.tsx",
      "parent": "/(private)",
      "children": [
        "/(private)/_scoped/projects/$project_id/"
      ]
    },
    "/(private)/_unscoped/settings/general": {
      "filePath": "(private)/_unscoped/settings/general.tsx",
      "parent": "/(private)/_unscoped"
    },
    "/(private)/_unscoped/settings/members": {
      "filePath": "(private)/_unscoped/settings/members.tsx",
      "parent": "/(private)/_unscoped"
    },
    "/(private)/_unscoped/components/": {
      "filePath": "(private)/_unscoped/components/index.tsx",
      "parent": "/(private)/_unscoped"
    },
    "/(private)/_scoped/projects/$project_id/": {
      "filePath": "(private)/_scoped/projects/$project_id/index.lazy.tsx",
      "parent": "/(private)/_scoped/projects/$project_id"
    }
  }
}
ROUTE_MANIFEST_END */
